query TCH_ViewerCardModLogsMessagesBySenderV2( $channelID: ID! $senderID: ID! $cursor: Cursor $first: Int! ) { viewerCardModLogs(channelID: $channelID, targetID: $senderID) { messages(first: $first, after: $cursor) { ... on ViewerCardModLogsMessagesError { code __typename } ... on ViewerCardModLogsMessagesConnection { edges { ...viewerCardModLogsMessagesEdgeFragment __typename } pageInfo { hasNextPage __typename } __typename } __typename } __typename } } fragment viewerCardModLogsMessagesEdgeFragment on ViewerCardModLogsMessagesEdge { __typename node { ...viewerCardModLogsCaughtMessageFragment ...viewerCardModLogsChatMessageFragment ...viewerCardModLogsModActionsMessageFragment __typename } cursor } fragment viewerCardModLogsChatMessageFragment on ViewerCardModLogsChatMessage { id sender { id login chatColor displayName displayBadges(channelID: $channelID) { id setID version __typename } __typename } sentAt content { text fragments { text content { ... on Emote { emoteID: id setID token __typename } ... on User { id __typename } __typename } __typename } __typename } __typename } fragment viewerCardModLogsCaughtMessageFragment on ViewerCardModLogsCaughtMessage { id status category sentAt resolvedAt content { text fragments { text content { ... on Emote { emoteID: id setID token __typename } ... on User { id __typename } __typename } __typename } __typename } sender { id login chatColor displayName displayBadges(channelID: $channelID) { id setID version __typename } __typename } resolver { ...messageSender __typename } __typename } fragment viewerCardModLogsModActionsMessageFragment on ViewerCardModLogsModActionsMessage { timestamp content { fallbackString ...modActionTokens __typename } __typename } fragment messageSender on User { id login chatColor displayName displayBadges(channelID: $channelID) { ...badge __typename } __typename } fragment badge on Badge { id setID version title image1x: imageURL(size: NORMAL) image2x: imageURL(size: DOUBLE) image4x: imageURL(size: QUADRUPLE) clickAction clickURL __typename } fragment modActionTokens on ModActionsLocalizedText { localizedStringFragments { ...modActionText __typename } __typename } fragment modActionText on ModActionsLocalizedTextFragment { token { ... on ModActionsLocalizedTextToken { text __typename } ... on User { displayName login id __typename } ... on UserError { key __typename } ... on UserDoesNotExist { key __typename } __typename } __typename }